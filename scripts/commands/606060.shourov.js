const axios = require("axios");
const fs = require("fs-extra");
const path = require("path");

module.exports = {
  config: {
    name: "Shourov11",
    version: "1.0.1",
    prefix: false,
    permssion: 0,
    credits: "nayan",
    description: "Fun",
    category: "no prefix",
    usages: "üòí",
    cooldowns: 5,
  },

  handleEvent: async function({ api, event }) {
    const { threadID, messageID, body } = event;
    if (!body) return;

    const msgBody = body.toLowerCase();

    if (msgBody.startsWith("call a aso") || msgBody.startsWith("üò°")) {
      try {
        const cachePath = path.resolve(__dirname, "cache", "shourov11.mp4");

        // ‡¶´‡¶æ‡¶á‡¶≤ ‡¶Ü‡¶ó‡ßá ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßã, ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßã
        if (!fs.existsSync(cachePath)) {
          const response = await axios({
            url: 'https://i.imgur.com/hj4iPpe.mp4',
            method: 'GET',
            responseType: 'stream'
          });
          await new Promise((resolve, reject) => {
            const writeStream = fs.createWriteStream(cachePath);
            response.data.pipe(writeStream);
            writeStream.on("finish", resolve);
            writeStream.on("error", reject);
          });
        }

        // ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤‡¶ø ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶æ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶ì
        await api.sendMessage({
          body: "ùêäùê¢ùêßùê†_ùêíùê°ùê®ùêÆùê´ùê®ùêØ",
          attachment: fs.createReadStream(cachePath)
        }, threadID, messageID);

        api.setMessageReaction("ü§£", messageID, () => {}, true);
      } catch (err) {
        console.error("Failed to fetch media:", err);
        api.sendMessage("‚ùå ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!", threadID, messageID);
      }
    }
  },

  start: function() {}
};